import { Component } from '@angular/core';
import { Vulnerability } from 'src/app/interfaces/vulnerability';
import { DashboardService } from 'src/app/services/dashboard.service';

@Component({
  selector: 'app-dashboard-by-vulnerability',
  templateUrl: './dashboard-by-vulnerability.component.html',
  styleUrls: ['./dashboard-by-vulnerability.component.css']
})
export class DashboardByVulnerabilityComponent {
  vulnerabilitiesArray: Vulnerability[] = [];

  constructor(private dashboardService: DashboardService) {}

  ngOnInit() {
    this.dashboardService.getVulnerabilities().subscribe(vulnerabilities => {
      this.vulnerabilitiesArray = vulnerabilities;
    });
  }

  getRiskColor(riskLevel: string) {
      switch (riskLevel) {
        case 'high':
          return 'red';
        case 'medium':
          return 'yellow';
        case 'low':
          return 'green';
        default:
          return 'black'; // Color predeterminado si el valor no coincide con ninguna opci√≥n
      }
    }

}
